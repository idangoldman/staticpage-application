// Google Fonts
// @import url("http://fonts.googleapis.com/earlyaccess/opensanshebrew.css");
@import url("http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800");

@function px2rem($value) {
    @return ( $value / $rem-base ) + rem;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

// Font set
a {
    color: $base-color;

    &:hover {
        text-decoration: none;
    }
}

html, body {
    height: 100%;
}

html {
  font-size: $rem-base + px;
}

body, button, input[type="text"], select, textarea {
    -webkit-font-smoothing: antialiased;
    color: $base-color;
    font-family: 'Open Sans', Tahoma, Helvetica, Arial, sans-serif;
    font-size: 1rem;
    font-weight: 400;
}

// Desktop
// @media ( max-width: 1600px ) {}
// Netbook
// @media ( max-width: 1024px ) {}

// Tablet
@media ( max-width: 768px ) {
    html {
        font-size: 12px;
    }
}

// Smartphone
@media ( max-width: 320px ) {
    html {
        font-size: 10px;
    }
}

// - rem and em units are computed into pixel values by the browser, based on font sizes in your design.
// - em units are based on the font size of the element they’re used on.
// - rem units are based on the font size of the html element.
// - em units can be influenced by font size inheritance from any parent element
// - rem units can be influenced by font size inheritance from browser font settings.

// - Use em units for sizing that should scale depending on the font size of an element other than the root.
// - Use rem units for sizing that doesn’t need em units, and that should scale depending on browser font size settings.
// - Use rem units unless you’re sure you need em units, including on font sizes.
// - Use rem units on media queries
// - Don’t use em or rem in multi column layout widths - use % instead.
// - Don’t use em or rem if scaling would unavoidably cause a layout element to break.


.none {
    display: none !important;
}

@mixin no-select {
    user-select: none;
}